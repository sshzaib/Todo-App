name: docker image CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get lowercase repository name
        id: vars
        run: echo "REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:latest
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: |
          # Save the private key to a file and set the correct permissions
          echo "$PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          # Connect to the EC2 instance and run the commands to pull and run the Docker image
          ssh -o StrictHostKeyChecking=no -i key.pem $REMOTE_USER@$REMOTE_HOST << EOF
          sudo docker pull ${{ vars.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:latest
          sudo docker stop my_container || true
          sudo docker rm my_container || true
          sudo docker run -d -p 3000:3000 --name my_container \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e DIRECT_URL="${{ secrets.DIRECT_URL }}" \
            ${{ vars.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:latest
          EOF
          # Remove the private key file
          rm key.pem
